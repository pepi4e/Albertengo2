//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     .NET Micro Framework MFSvcUtil.Exe
//     Runtime Version:2.0.00001.0001
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Text;
using System.Xml;
using Dpws.Device;
using Dpws.Device.Services;
using Ws.Services;
using Ws.Services.WsaAddressing;
using Ws.Services.Xml;
using Ws.Services.Binding;
using Ws.Services.Soap;

namespace tempuri.org
{
    
    
    public class ISmartService : DpwsHostedService
    {
        
        private IISmartService m_service;
        
        public ISmartService(IISmartService service, ProtocolVersion version) : 
                base(version)
        {
            // Set the service implementation properties
            m_service = service;

            // Set base service properties
            ServiceNamespace = new WsXmlNamespace("ism", "http://tempuri.org/");
            ServiceID = "urn:uuid:bbfbc101-9392-4bd1-abc8-e2158580474d";
            ServiceTypeName = "ISmartService";

            // Add service types here
            ServiceOperations.Add(new WsServiceOperation("http://tempuri.org/ISmartService", "GetMeasurements"));
            ServiceOperations.Add(new WsServiceOperation("http://tempuri.org/ISmartService", "CreateMeasurement"));

            // Add event sources here
        }
        
        public ISmartService(IISmartService service) : 
                this(service, new ProtocolVersion10())
        {
        }
        
        public virtual WsMessage GetMeasurements(WsMessage request)
        {
            // Build request object
            GetMeasurementsDataContractSerializer reqDcs;
            reqDcs = new GetMeasurementsDataContractSerializer("GetMeasurements", "http://tempuri.org/");
            GetMeasurements req;
            req = ((GetMeasurements)(reqDcs.ReadObject(request.Reader)));
            request.Reader.Dispose();
            request.Reader = null;

            // Create response object
            // Call service operation to process request and return response.
            GetMeasurementsResponse resp;
            resp = m_service.GetMeasurements(req);

            // Create response header
            WsWsaHeader respHeader = new WsWsaHeader("http://tempuri.org/ISmartService/GetMeasurementsResponse", request.Header.MessageID, m_version.AnonymousUri, null, null, null);
            WsMessage response = new WsMessage(respHeader, resp, WsPrefix.Wsdp);

            // Create response serializer
            GetMeasurementsResponseDataContractSerializer respDcs;
            respDcs = new GetMeasurementsResponseDataContractSerializer("GetMeasurementsResponse", "http://tempuri.org/");
            response.Serializer = respDcs;
            return response;
        }
        
        public virtual WsMessage CreateMeasurement(WsMessage request)
        {
            // Build request object
            CreateMeasurementDataContractSerializer reqDcs;
            reqDcs = new CreateMeasurementDataContractSerializer("CreateMeasurement", "http://tempuri.org/");
            CreateMeasurement req;
            req = ((CreateMeasurement)(reqDcs.ReadObject(request.Reader)));
            request.Reader.Dispose();
            request.Reader = null;

            // Create response object
            // Call service operation to process request and return response.
            CreateMeasurementResponse resp;
            resp = m_service.CreateMeasurement(req);

            // Create response header
            WsWsaHeader respHeader = new WsWsaHeader("http://tempuri.org/ISmartService/CreateMeasurementResponse", request.Header.MessageID, m_version.AnonymousUri, null, null, null);
            WsMessage response = new WsMessage(respHeader, resp, WsPrefix.Wsdp);

            // Create response serializer
            CreateMeasurementResponseDataContractSerializer respDcs;
            respDcs = new CreateMeasurementResponseDataContractSerializer("CreateMeasurementResponse", "http://tempuri.org/");
            response.Serializer = respDcs;
            return response;
        }
    }
}
